//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("VentoNorteModel", "FK_Pedidos_Clientes", "Clientes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VentoNorte.Clientes), "Pedidos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VentoNorte.Pedidos), true)]
[assembly: EdmRelationshipAttribute("VentoNorteModel", "FK_Produtos_Fornecedores", "Fornecedores", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VentoNorte.Fornecedores), "Produtos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VentoNorte.Produtos), true)]
[assembly: EdmRelationshipAttribute("VentoNorteModel", "FK_Produtos_Grupos", "Grupos", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VentoNorte.Grupos), "Produtos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VentoNorte.Produtos), true)]
[assembly: EdmRelationshipAttribute("VentoNorteModel", "FK_Pedidos_Transportadoras", "Transportadoras", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VentoNorte.Transportadoras), "Pedidos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VentoNorte.Pedidos), true)]
[assembly: EdmRelationshipAttribute("VentoNorteModel", "FK_PedidosItens_Pedidos", "Pedidos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VentoNorte.Pedidos), "PedidosItens", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VentoNorte.PedidosItens), true)]
[assembly: EdmRelationshipAttribute("VentoNorteModel", "FK_PedidosItens_Produtos", "Produtos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VentoNorte.Produtos), "PedidosItens", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VentoNorte.PedidosItens), true)]

#endregion

namespace VentoNorte
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class VentoNorteEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new VentoNorteEntities object using the connection string found in the 'VentoNorteEntities' section of the application configuration file.
        /// </summary>
        public VentoNorteEntities() : base("name=VentoNorteEntities", "VentoNorteEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new VentoNorteEntities object.
        /// </summary>
        public VentoNorteEntities(string connectionString) : base(connectionString, "VentoNorteEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new VentoNorteEntities object.
        /// </summary>
        public VentoNorteEntities(EntityConnection connection) : base(connection, "VentoNorteEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Clientes> Clientes
        {
            get
            {
                if ((_Clientes == null))
                {
                    _Clientes = base.CreateObjectSet<Clientes>("Clientes");
                }
                return _Clientes;
            }
        }
        private ObjectSet<Clientes> _Clientes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Fornecedores> Fornecedores
        {
            get
            {
                if ((_Fornecedores == null))
                {
                    _Fornecedores = base.CreateObjectSet<Fornecedores>("Fornecedores");
                }
                return _Fornecedores;
            }
        }
        private ObjectSet<Fornecedores> _Fornecedores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Grupos> Grupos
        {
            get
            {
                if ((_Grupos == null))
                {
                    _Grupos = base.CreateObjectSet<Grupos>("Grupos");
                }
                return _Grupos;
            }
        }
        private ObjectSet<Grupos> _Grupos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pedidos> Pedidos
        {
            get
            {
                if ((_Pedidos == null))
                {
                    _Pedidos = base.CreateObjectSet<Pedidos>("Pedidos");
                }
                return _Pedidos;
            }
        }
        private ObjectSet<Pedidos> _Pedidos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PedidosItens> PedidosItens
        {
            get
            {
                if ((_PedidosItens == null))
                {
                    _PedidosItens = base.CreateObjectSet<PedidosItens>("PedidosItens");
                }
                return _PedidosItens;
            }
        }
        private ObjectSet<PedidosItens> _PedidosItens;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Produtos> Produtos
        {
            get
            {
                if ((_Produtos == null))
                {
                    _Produtos = base.CreateObjectSet<Produtos>("Produtos");
                }
                return _Produtos;
            }
        }
        private ObjectSet<Produtos> _Produtos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transportadoras> Transportadoras
        {
            get
            {
                if ((_Transportadoras == null))
                {
                    _Transportadoras = base.CreateObjectSet<Transportadoras>("Transportadoras");
                }
                return _Transportadoras;
            }
        }
        private ObjectSet<Transportadoras> _Transportadoras;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clientes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientes(Clientes clientes)
        {
            base.AddObject("Clientes", clientes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Fornecedores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFornecedores(Fornecedores fornecedores)
        {
            base.AddObject("Fornecedores", fornecedores);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Grupos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGrupos(Grupos grupos)
        {
            base.AddObject("Grupos", grupos);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pedidos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPedidos(Pedidos pedidos)
        {
            base.AddObject("Pedidos", pedidos);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PedidosItens EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPedidosItens(PedidosItens pedidosItens)
        {
            base.AddObject("PedidosItens", pedidosItens);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Produtos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProdutos(Produtos produtos)
        {
            base.AddObject("Produtos", produtos);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transportadoras EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransportadoras(Transportadoras transportadoras)
        {
            base.AddObject("Transportadoras", transportadoras);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VentoNorteModel", Name="Clientes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Clientes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Clientes object.
        /// </summary>
        /// <param name="clienteID">Initial value of the ClienteID property.</param>
        /// <param name="clienteNome">Initial value of the ClienteNome property.</param>
        public static Clientes CreateClientes(global::System.String clienteID, global::System.String clienteNome)
        {
            Clientes clientes = new Clientes();
            clientes.ClienteID = clienteID;
            clientes.ClienteNome = clienteNome;
            return clientes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClienteID
        {
            get
            {
                return _ClienteID;
            }
            set
            {
                if (_ClienteID != value)
                {
                    OnClienteIDChanging(value);
                    ReportPropertyChanging("ClienteID");
                    _ClienteID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClienteID");
                    OnClienteIDChanged();
                }
            }
        }
        private global::System.String _ClienteID;
        partial void OnClienteIDChanging(global::System.String value);
        partial void OnClienteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClienteNome
        {
            get
            {
                return _ClienteNome;
            }
            set
            {
                OnClienteNomeChanging(value);
                ReportPropertyChanging("ClienteNome");
                _ClienteNome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClienteNome");
                OnClienteNomeChanged();
            }
        }
        private global::System.String _ClienteNome;
        partial void OnClienteNomeChanging(global::System.String value);
        partial void OnClienteNomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClienteContato
        {
            get
            {
                return _ClienteContato;
            }
            set
            {
                OnClienteContatoChanging(value);
                ReportPropertyChanging("ClienteContato");
                _ClienteContato = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClienteContato");
                OnClienteContatoChanged();
            }
        }
        private global::System.String _ClienteContato;
        partial void OnClienteContatoChanging(global::System.String value);
        partial void OnClienteContatoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClienteCargo
        {
            get
            {
                return _ClienteCargo;
            }
            set
            {
                OnClienteCargoChanging(value);
                ReportPropertyChanging("ClienteCargo");
                _ClienteCargo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClienteCargo");
                OnClienteCargoChanged();
            }
        }
        private global::System.String _ClienteCargo;
        partial void OnClienteCargoChanging(global::System.String value);
        partial void OnClienteCargoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClienteEndereco
        {
            get
            {
                return _ClienteEndereco;
            }
            set
            {
                OnClienteEnderecoChanging(value);
                ReportPropertyChanging("ClienteEndereco");
                _ClienteEndereco = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClienteEndereco");
                OnClienteEnderecoChanged();
            }
        }
        private global::System.String _ClienteEndereco;
        partial void OnClienteEnderecoChanging(global::System.String value);
        partial void OnClienteEnderecoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClienteCidade
        {
            get
            {
                return _ClienteCidade;
            }
            set
            {
                OnClienteCidadeChanging(value);
                ReportPropertyChanging("ClienteCidade");
                _ClienteCidade = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClienteCidade");
                OnClienteCidadeChanged();
            }
        }
        private global::System.String _ClienteCidade;
        partial void OnClienteCidadeChanging(global::System.String value);
        partial void OnClienteCidadeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClienteRegiao
        {
            get
            {
                return _ClienteRegiao;
            }
            set
            {
                OnClienteRegiaoChanging(value);
                ReportPropertyChanging("ClienteRegiao");
                _ClienteRegiao = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClienteRegiao");
                OnClienteRegiaoChanged();
            }
        }
        private global::System.String _ClienteRegiao;
        partial void OnClienteRegiaoChanging(global::System.String value);
        partial void OnClienteRegiaoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClienteCEP
        {
            get
            {
                return _ClienteCEP;
            }
            set
            {
                OnClienteCEPChanging(value);
                ReportPropertyChanging("ClienteCEP");
                _ClienteCEP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClienteCEP");
                OnClienteCEPChanged();
            }
        }
        private global::System.String _ClienteCEP;
        partial void OnClienteCEPChanging(global::System.String value);
        partial void OnClienteCEPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientePais
        {
            get
            {
                return _ClientePais;
            }
            set
            {
                OnClientePaisChanging(value);
                ReportPropertyChanging("ClientePais");
                _ClientePais = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientePais");
                OnClientePaisChanged();
            }
        }
        private global::System.String _ClientePais;
        partial void OnClientePaisChanging(global::System.String value);
        partial void OnClientePaisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClienteFone
        {
            get
            {
                return _ClienteFone;
            }
            set
            {
                OnClienteFoneChanging(value);
                ReportPropertyChanging("ClienteFone");
                _ClienteFone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClienteFone");
                OnClienteFoneChanged();
            }
        }
        private global::System.String _ClienteFone;
        partial void OnClienteFoneChanging(global::System.String value);
        partial void OnClienteFoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClienteFax
        {
            get
            {
                return _ClienteFax;
            }
            set
            {
                OnClienteFaxChanging(value);
                ReportPropertyChanging("ClienteFax");
                _ClienteFax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClienteFax");
                OnClienteFaxChanged();
            }
        }
        private global::System.String _ClienteFax;
        partial void OnClienteFaxChanging(global::System.String value);
        partial void OnClienteFaxChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VentoNorteModel", "FK_Pedidos_Clientes", "Pedidos")]
        public EntityCollection<Pedidos> Pedidos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pedidos>("VentoNorteModel.FK_Pedidos_Clientes", "Pedidos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pedidos>("VentoNorteModel.FK_Pedidos_Clientes", "Pedidos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VentoNorteModel", Name="Fornecedores")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Fornecedores : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Fornecedores object.
        /// </summary>
        /// <param name="fornID">Initial value of the FornID property.</param>
        /// <param name="fornNome">Initial value of the FornNome property.</param>
        public static Fornecedores CreateFornecedores(global::System.Int32 fornID, global::System.String fornNome)
        {
            Fornecedores fornecedores = new Fornecedores();
            fornecedores.FornID = fornID;
            fornecedores.FornNome = fornNome;
            return fornecedores;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FornID
        {
            get
            {
                return _FornID;
            }
            set
            {
                if (_FornID != value)
                {
                    OnFornIDChanging(value);
                    ReportPropertyChanging("FornID");
                    _FornID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FornID");
                    OnFornIDChanged();
                }
            }
        }
        private global::System.Int32 _FornID;
        partial void OnFornIDChanging(global::System.Int32 value);
        partial void OnFornIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FornNome
        {
            get
            {
                return _FornNome;
            }
            set
            {
                OnFornNomeChanging(value);
                ReportPropertyChanging("FornNome");
                _FornNome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FornNome");
                OnFornNomeChanged();
            }
        }
        private global::System.String _FornNome;
        partial void OnFornNomeChanging(global::System.String value);
        partial void OnFornNomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FornContato
        {
            get
            {
                return _FornContato;
            }
            set
            {
                OnFornContatoChanging(value);
                ReportPropertyChanging("FornContato");
                _FornContato = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FornContato");
                OnFornContatoChanged();
            }
        }
        private global::System.String _FornContato;
        partial void OnFornContatoChanging(global::System.String value);
        partial void OnFornContatoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FornCargo
        {
            get
            {
                return _FornCargo;
            }
            set
            {
                OnFornCargoChanging(value);
                ReportPropertyChanging("FornCargo");
                _FornCargo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FornCargo");
                OnFornCargoChanged();
            }
        }
        private global::System.String _FornCargo;
        partial void OnFornCargoChanging(global::System.String value);
        partial void OnFornCargoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FornEndereco
        {
            get
            {
                return _FornEndereco;
            }
            set
            {
                OnFornEnderecoChanging(value);
                ReportPropertyChanging("FornEndereco");
                _FornEndereco = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FornEndereco");
                OnFornEnderecoChanged();
            }
        }
        private global::System.String _FornEndereco;
        partial void OnFornEnderecoChanging(global::System.String value);
        partial void OnFornEnderecoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FornCidade
        {
            get
            {
                return _FornCidade;
            }
            set
            {
                OnFornCidadeChanging(value);
                ReportPropertyChanging("FornCidade");
                _FornCidade = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FornCidade");
                OnFornCidadeChanged();
            }
        }
        private global::System.String _FornCidade;
        partial void OnFornCidadeChanging(global::System.String value);
        partial void OnFornCidadeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FornRegiao
        {
            get
            {
                return _FornRegiao;
            }
            set
            {
                OnFornRegiaoChanging(value);
                ReportPropertyChanging("FornRegiao");
                _FornRegiao = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FornRegiao");
                OnFornRegiaoChanged();
            }
        }
        private global::System.String _FornRegiao;
        partial void OnFornRegiaoChanging(global::System.String value);
        partial void OnFornRegiaoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FornCEP
        {
            get
            {
                return _FornCEP;
            }
            set
            {
                OnFornCEPChanging(value);
                ReportPropertyChanging("FornCEP");
                _FornCEP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FornCEP");
                OnFornCEPChanged();
            }
        }
        private global::System.String _FornCEP;
        partial void OnFornCEPChanging(global::System.String value);
        partial void OnFornCEPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FornPais
        {
            get
            {
                return _FornPais;
            }
            set
            {
                OnFornPaisChanging(value);
                ReportPropertyChanging("FornPais");
                _FornPais = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FornPais");
                OnFornPaisChanged();
            }
        }
        private global::System.String _FornPais;
        partial void OnFornPaisChanging(global::System.String value);
        partial void OnFornPaisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FornFone
        {
            get
            {
                return _FornFone;
            }
            set
            {
                OnFornFoneChanging(value);
                ReportPropertyChanging("FornFone");
                _FornFone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FornFone");
                OnFornFoneChanged();
            }
        }
        private global::System.String _FornFone;
        partial void OnFornFoneChanging(global::System.String value);
        partial void OnFornFoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FornFax
        {
            get
            {
                return _FornFax;
            }
            set
            {
                OnFornFaxChanging(value);
                ReportPropertyChanging("FornFax");
                _FornFax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FornFax");
                OnFornFaxChanged();
            }
        }
        private global::System.String _FornFax;
        partial void OnFornFaxChanging(global::System.String value);
        partial void OnFornFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FornHomePage
        {
            get
            {
                return _FornHomePage;
            }
            set
            {
                OnFornHomePageChanging(value);
                ReportPropertyChanging("FornHomePage");
                _FornHomePage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FornHomePage");
                OnFornHomePageChanged();
            }
        }
        private global::System.String _FornHomePage;
        partial void OnFornHomePageChanging(global::System.String value);
        partial void OnFornHomePageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VentoNorteModel", "FK_Produtos_Fornecedores", "Produtos")]
        public EntityCollection<Produtos> Produtos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Produtos>("VentoNorteModel.FK_Produtos_Fornecedores", "Produtos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Produtos>("VentoNorteModel.FK_Produtos_Fornecedores", "Produtos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VentoNorteModel", Name="Grupos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Grupos : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Grupos object.
        /// </summary>
        /// <param name="grupoID">Initial value of the GrupoID property.</param>
        /// <param name="grupoNome">Initial value of the GrupoNome property.</param>
        public static Grupos CreateGrupos(global::System.Int32 grupoID, global::System.String grupoNome)
        {
            Grupos grupos = new Grupos();
            grupos.GrupoID = grupoID;
            grupos.GrupoNome = grupoNome;
            return grupos;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GrupoID
        {
            get
            {
                return _GrupoID;
            }
            set
            {
                if (_GrupoID != value)
                {
                    OnGrupoIDChanging(value);
                    ReportPropertyChanging("GrupoID");
                    _GrupoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GrupoID");
                    OnGrupoIDChanged();
                }
            }
        }
        private global::System.Int32 _GrupoID;
        partial void OnGrupoIDChanging(global::System.Int32 value);
        partial void OnGrupoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GrupoNome
        {
            get
            {
                return _GrupoNome;
            }
            set
            {
                OnGrupoNomeChanging(value);
                ReportPropertyChanging("GrupoNome");
                _GrupoNome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GrupoNome");
                OnGrupoNomeChanged();
            }
        }
        private global::System.String _GrupoNome;
        partial void OnGrupoNomeChanging(global::System.String value);
        partial void OnGrupoNomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GrupoObservacao
        {
            get
            {
                return _GrupoObservacao;
            }
            set
            {
                OnGrupoObservacaoChanging(value);
                ReportPropertyChanging("GrupoObservacao");
                _GrupoObservacao = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GrupoObservacao");
                OnGrupoObservacaoChanged();
            }
        }
        private global::System.String _GrupoObservacao;
        partial void OnGrupoObservacaoChanging(global::System.String value);
        partial void OnGrupoObservacaoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] GrupoFoto
        {
            get
            {
                return StructuralObject.GetValidValue(_GrupoFoto);
            }
            set
            {
                OnGrupoFotoChanging(value);
                ReportPropertyChanging("GrupoFoto");
                _GrupoFoto = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GrupoFoto");
                OnGrupoFotoChanged();
            }
        }
        private global::System.Byte[] _GrupoFoto;
        partial void OnGrupoFotoChanging(global::System.Byte[] value);
        partial void OnGrupoFotoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VentoNorteModel", "FK_Produtos_Grupos", "Produtos")]
        public EntityCollection<Produtos> Produtos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Produtos>("VentoNorteModel.FK_Produtos_Grupos", "Produtos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Produtos>("VentoNorteModel.FK_Produtos_Grupos", "Produtos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VentoNorteModel", Name="Pedidos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pedidos : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pedidos object.
        /// </summary>
        /// <param name="pedidoID">Initial value of the PedidoID property.</param>
        public static Pedidos CreatePedidos(global::System.Int32 pedidoID)
        {
            Pedidos pedidos = new Pedidos();
            pedidos.PedidoID = pedidoID;
            return pedidos;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PedidoID
        {
            get
            {
                return _PedidoID;
            }
            set
            {
                if (_PedidoID != value)
                {
                    OnPedidoIDChanging(value);
                    ReportPropertyChanging("PedidoID");
                    _PedidoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PedidoID");
                    OnPedidoIDChanged();
                }
            }
        }
        private global::System.Int32 _PedidoID;
        partial void OnPedidoIDChanging(global::System.Int32 value);
        partial void OnPedidoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClienteID
        {
            get
            {
                return _ClienteID;
            }
            set
            {
                OnClienteIDChanging(value);
                ReportPropertyChanging("ClienteID");
                _ClienteID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClienteID");
                OnClienteIDChanged();
            }
        }
        private global::System.String _ClienteID;
        partial void OnClienteIDChanging(global::System.String value);
        partial void OnClienteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PedidoData
        {
            get
            {
                return _PedidoData;
            }
            set
            {
                OnPedidoDataChanging(value);
                ReportPropertyChanging("PedidoData");
                _PedidoData = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PedidoData");
                OnPedidoDataChanged();
            }
        }
        private Nullable<global::System.DateTime> _PedidoData;
        partial void OnPedidoDataChanging(Nullable<global::System.DateTime> value);
        partial void OnPedidoDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PedidoDataEnvio
        {
            get
            {
                return _PedidoDataEnvio;
            }
            set
            {
                OnPedidoDataEnvioChanging(value);
                ReportPropertyChanging("PedidoDataEnvio");
                _PedidoDataEnvio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PedidoDataEnvio");
                OnPedidoDataEnvioChanged();
            }
        }
        private Nullable<global::System.DateTime> _PedidoDataEnvio;
        partial void OnPedidoDataEnvioChanging(Nullable<global::System.DateTime> value);
        partial void OnPedidoDataEnvioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TranspID
        {
            get
            {
                return _TranspID;
            }
            set
            {
                OnTranspIDChanging(value);
                ReportPropertyChanging("TranspID");
                _TranspID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TranspID");
                OnTranspIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TranspID;
        partial void OnTranspIDChanging(Nullable<global::System.Int32> value);
        partial void OnTranspIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PedidoFrete
        {
            get
            {
                return _PedidoFrete;
            }
            set
            {
                OnPedidoFreteChanging(value);
                ReportPropertyChanging("PedidoFrete");
                _PedidoFrete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PedidoFrete");
                OnPedidoFreteChanged();
            }
        }
        private Nullable<global::System.Decimal> _PedidoFrete;
        partial void OnPedidoFreteChanging(Nullable<global::System.Decimal> value);
        partial void OnPedidoFreteChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VentoNorteModel", "FK_Pedidos_Clientes", "Clientes")]
        public Clientes Clientes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clientes>("VentoNorteModel.FK_Pedidos_Clientes", "Clientes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clientes>("VentoNorteModel.FK_Pedidos_Clientes", "Clientes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Clientes> ClientesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clientes>("VentoNorteModel.FK_Pedidos_Clientes", "Clientes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Clientes>("VentoNorteModel.FK_Pedidos_Clientes", "Clientes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VentoNorteModel", "FK_Pedidos_Transportadoras", "Transportadoras")]
        public Transportadoras Transportadoras
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transportadoras>("VentoNorteModel.FK_Pedidos_Transportadoras", "Transportadoras").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transportadoras>("VentoNorteModel.FK_Pedidos_Transportadoras", "Transportadoras").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transportadoras> TransportadorasReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transportadoras>("VentoNorteModel.FK_Pedidos_Transportadoras", "Transportadoras");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transportadoras>("VentoNorteModel.FK_Pedidos_Transportadoras", "Transportadoras", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VentoNorteModel", "FK_PedidosItens_Pedidos", "PedidosItens")]
        public EntityCollection<PedidosItens> PedidosItens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PedidosItens>("VentoNorteModel.FK_PedidosItens_Pedidos", "PedidosItens");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PedidosItens>("VentoNorteModel.FK_PedidosItens_Pedidos", "PedidosItens", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VentoNorteModel", Name="PedidosItens")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PedidosItens : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PedidosItens object.
        /// </summary>
        /// <param name="pedidoID">Initial value of the PedidoID property.</param>
        /// <param name="prodID">Initial value of the ProdID property.</param>
        /// <param name="itemPreco">Initial value of the ItemPreco property.</param>
        /// <param name="itemQuantidade">Initial value of the ItemQuantidade property.</param>
        public static PedidosItens CreatePedidosItens(global::System.Int32 pedidoID, global::System.Int32 prodID, global::System.Decimal itemPreco, global::System.Int16 itemQuantidade)
        {
            PedidosItens pedidosItens = new PedidosItens();
            pedidosItens.PedidoID = pedidoID;
            pedidosItens.ProdID = prodID;
            pedidosItens.ItemPreco = itemPreco;
            pedidosItens.ItemQuantidade = itemQuantidade;
            return pedidosItens;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PedidoID
        {
            get
            {
                return _PedidoID;
            }
            set
            {
                if (_PedidoID != value)
                {
                    OnPedidoIDChanging(value);
                    ReportPropertyChanging("PedidoID");
                    _PedidoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PedidoID");
                    OnPedidoIDChanged();
                }
            }
        }
        private global::System.Int32 _PedidoID;
        partial void OnPedidoIDChanging(global::System.Int32 value);
        partial void OnPedidoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProdID
        {
            get
            {
                return _ProdID;
            }
            set
            {
                if (_ProdID != value)
                {
                    OnProdIDChanging(value);
                    ReportPropertyChanging("ProdID");
                    _ProdID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProdID");
                    OnProdIDChanged();
                }
            }
        }
        private global::System.Int32 _ProdID;
        partial void OnProdIDChanging(global::System.Int32 value);
        partial void OnProdIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ItemPreco
        {
            get
            {
                return _ItemPreco;
            }
            set
            {
                OnItemPrecoChanging(value);
                ReportPropertyChanging("ItemPreco");
                _ItemPreco = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemPreco");
                OnItemPrecoChanged();
            }
        }
        private global::System.Decimal _ItemPreco;
        partial void OnItemPrecoChanging(global::System.Decimal value);
        partial void OnItemPrecoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ItemQuantidade
        {
            get
            {
                return _ItemQuantidade;
            }
            set
            {
                OnItemQuantidadeChanging(value);
                ReportPropertyChanging("ItemQuantidade");
                _ItemQuantidade = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemQuantidade");
                OnItemQuantidadeChanged();
            }
        }
        private global::System.Int16 _ItemQuantidade;
        partial void OnItemQuantidadeChanging(global::System.Int16 value);
        partial void OnItemQuantidadeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VentoNorteModel", "FK_PedidosItens_Pedidos", "Pedidos")]
        public Pedidos Pedidos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pedidos>("VentoNorteModel.FK_PedidosItens_Pedidos", "Pedidos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pedidos>("VentoNorteModel.FK_PedidosItens_Pedidos", "Pedidos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pedidos> PedidosReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pedidos>("VentoNorteModel.FK_PedidosItens_Pedidos", "Pedidos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pedidos>("VentoNorteModel.FK_PedidosItens_Pedidos", "Pedidos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VentoNorteModel", "FK_PedidosItens_Produtos", "Produtos")]
        public Produtos Produtos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Produtos>("VentoNorteModel.FK_PedidosItens_Produtos", "Produtos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Produtos>("VentoNorteModel.FK_PedidosItens_Produtos", "Produtos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Produtos> ProdutosReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Produtos>("VentoNorteModel.FK_PedidosItens_Produtos", "Produtos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Produtos>("VentoNorteModel.FK_PedidosItens_Produtos", "Produtos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VentoNorteModel", Name="Produtos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Produtos : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Produtos object.
        /// </summary>
        /// <param name="prodID">Initial value of the ProdID property.</param>
        /// <param name="prodName">Initial value of the ProdName property.</param>
        /// <param name="prodDescontinuado">Initial value of the ProdDescontinuado property.</param>
        public static Produtos CreateProdutos(global::System.Int32 prodID, global::System.String prodName, global::System.Boolean prodDescontinuado)
        {
            Produtos produtos = new Produtos();
            produtos.ProdID = prodID;
            produtos.ProdName = prodName;
            produtos.ProdDescontinuado = prodDescontinuado;
            return produtos;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProdID
        {
            get
            {
                return _ProdID;
            }
            set
            {
                if (_ProdID != value)
                {
                    OnProdIDChanging(value);
                    ReportPropertyChanging("ProdID");
                    _ProdID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProdID");
                    OnProdIDChanged();
                }
            }
        }
        private global::System.Int32 _ProdID;
        partial void OnProdIDChanging(global::System.Int32 value);
        partial void OnProdIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProdName
        {
            get
            {
                return _ProdName;
            }
            set
            {
                OnProdNameChanging(value);
                ReportPropertyChanging("ProdName");
                _ProdName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProdName");
                OnProdNameChanged();
            }
        }
        private global::System.String _ProdName;
        partial void OnProdNameChanging(global::System.String value);
        partial void OnProdNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FornID
        {
            get
            {
                return _FornID;
            }
            set
            {
                OnFornIDChanging(value);
                ReportPropertyChanging("FornID");
                _FornID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FornID");
                OnFornIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FornID;
        partial void OnFornIDChanging(Nullable<global::System.Int32> value);
        partial void OnFornIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GrupoID
        {
            get
            {
                return _GrupoID;
            }
            set
            {
                OnGrupoIDChanging(value);
                ReportPropertyChanging("GrupoID");
                _GrupoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrupoID");
                OnGrupoIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GrupoID;
        partial void OnGrupoIDChanging(Nullable<global::System.Int32> value);
        partial void OnGrupoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ProdPreco
        {
            get
            {
                return _ProdPreco;
            }
            set
            {
                OnProdPrecoChanging(value);
                ReportPropertyChanging("ProdPreco");
                _ProdPreco = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProdPreco");
                OnProdPrecoChanged();
            }
        }
        private Nullable<global::System.Decimal> _ProdPreco;
        partial void OnProdPrecoChanging(Nullable<global::System.Decimal> value);
        partial void OnProdPrecoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> ProdEstoque
        {
            get
            {
                return _ProdEstoque;
            }
            set
            {
                OnProdEstoqueChanging(value);
                ReportPropertyChanging("ProdEstoque");
                _ProdEstoque = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProdEstoque");
                OnProdEstoqueChanged();
            }
        }
        private Nullable<global::System.Int16> _ProdEstoque;
        partial void OnProdEstoqueChanging(Nullable<global::System.Int16> value);
        partial void OnProdEstoqueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ProdDescontinuado
        {
            get
            {
                return _ProdDescontinuado;
            }
            set
            {
                OnProdDescontinuadoChanging(value);
                ReportPropertyChanging("ProdDescontinuado");
                _ProdDescontinuado = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProdDescontinuado");
                OnProdDescontinuadoChanged();
            }
        }
        private global::System.Boolean _ProdDescontinuado;
        partial void OnProdDescontinuadoChanging(global::System.Boolean value);
        partial void OnProdDescontinuadoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VentoNorteModel", "FK_Produtos_Fornecedores", "Fornecedores")]
        public Fornecedores Fornecedores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fornecedores>("VentoNorteModel.FK_Produtos_Fornecedores", "Fornecedores").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fornecedores>("VentoNorteModel.FK_Produtos_Fornecedores", "Fornecedores").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fornecedores> FornecedoresReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fornecedores>("VentoNorteModel.FK_Produtos_Fornecedores", "Fornecedores");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fornecedores>("VentoNorteModel.FK_Produtos_Fornecedores", "Fornecedores", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VentoNorteModel", "FK_Produtos_Grupos", "Grupos")]
        public Grupos Grupos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Grupos>("VentoNorteModel.FK_Produtos_Grupos", "Grupos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Grupos>("VentoNorteModel.FK_Produtos_Grupos", "Grupos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Grupos> GruposReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Grupos>("VentoNorteModel.FK_Produtos_Grupos", "Grupos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Grupos>("VentoNorteModel.FK_Produtos_Grupos", "Grupos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VentoNorteModel", "FK_PedidosItens_Produtos", "PedidosItens")]
        public EntityCollection<PedidosItens> PedidosItens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PedidosItens>("VentoNorteModel.FK_PedidosItens_Produtos", "PedidosItens");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PedidosItens>("VentoNorteModel.FK_PedidosItens_Produtos", "PedidosItens", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VentoNorteModel", Name="Transportadoras")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transportadoras : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transportadoras object.
        /// </summary>
        /// <param name="transID">Initial value of the TransID property.</param>
        /// <param name="transNome">Initial value of the TransNome property.</param>
        public static Transportadoras CreateTransportadoras(global::System.Int32 transID, global::System.String transNome)
        {
            Transportadoras transportadoras = new Transportadoras();
            transportadoras.TransID = transID;
            transportadoras.TransNome = transNome;
            return transportadoras;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransID
        {
            get
            {
                return _TransID;
            }
            set
            {
                if (_TransID != value)
                {
                    OnTransIDChanging(value);
                    ReportPropertyChanging("TransID");
                    _TransID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransID");
                    OnTransIDChanged();
                }
            }
        }
        private global::System.Int32 _TransID;
        partial void OnTransIDChanging(global::System.Int32 value);
        partial void OnTransIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransNome
        {
            get
            {
                return _TransNome;
            }
            set
            {
                OnTransNomeChanging(value);
                ReportPropertyChanging("TransNome");
                _TransNome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TransNome");
                OnTransNomeChanged();
            }
        }
        private global::System.String _TransNome;
        partial void OnTransNomeChanging(global::System.String value);
        partial void OnTransNomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransFone
        {
            get
            {
                return _TransFone;
            }
            set
            {
                OnTransFoneChanging(value);
                ReportPropertyChanging("TransFone");
                _TransFone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransFone");
                OnTransFoneChanged();
            }
        }
        private global::System.String _TransFone;
        partial void OnTransFoneChanging(global::System.String value);
        partial void OnTransFoneChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VentoNorteModel", "FK_Pedidos_Transportadoras", "Pedidos")]
        public EntityCollection<Pedidos> Pedidos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pedidos>("VentoNorteModel.FK_Pedidos_Transportadoras", "Pedidos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pedidos>("VentoNorteModel.FK_Pedidos_Transportadoras", "Pedidos", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
